node {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
     def myTestContainer = docker.image('node:16')
     myTestContainer.pull()
     myTestContainer.inside {
           sh 'HOME=$PWD cat /etc/passwd'
	   sh 'HOME=$PWD echo $HOME'
	   sh 'HOME=$PWD ls -l' 
    	   sh 'HOME=$PWD echo $PWD'
	   dir(pwd()) {
                 sh 'HOME=$PWD echo $PWD'
		 sh 'HOME=$PWD npm install --only=dev'
		 sh 'HOME=$PWD npm test'
	   }
       
     }
   }
   stage('test with a DB') {
     def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes") 
     def myTestContainer = docker.image('node:16')
     myTestContainer.pull()
     myTestContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
		dir(pwd()) {
		  sh 'HOME=$PWD npm install --only=dev' 
		  sh 'HOME=$PWD npm test'                     
		}
     }                                   
     mysql.stop()
   }                                     
   stage('docker build/push') {            
     docker.withRegistry('https://index.docker.io/v2/', 'pyrosandro-dockerhub') {
       def app = docker.build("pyrosandro/pipeline-docker-nodejs-demo:${commit_id}", '.').push()
     }                                     
   }                                       
}                                          
